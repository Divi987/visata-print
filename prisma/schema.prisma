// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model SiteSetting {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  siteName String
  siteLogo String?
  description String?
  phoneNo String?
  email String?
  address String?
  country String?
  currency String?
  currencySymbol String ?
  countryCode String?
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email String
  phoneNo String?
  password String
  address String?
  cart String[]
  wishlist String[]
  recentlyViewedProducts String[]
  createdBy String
  updatedBy String
  deletedBy String
  createdAt DateTime @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
  Cart Cart[]
  Invoice Invoice []
  rating Rating[]
}

model Cart {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  product Product @relation(fields: [productId], references: [id])
  productId String @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime?
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String?
  image String?
  video String?
  parentId String?
  level Int
  slug String?
  path String?
  isFeatured Boolean @default(false)
  isTopPick Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime?

  productCategoryIDs String[] @db.ObjectId
  productCategory ProductCategory[] @relation
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String?
  price Int
  discount Int?
  discountedPrice Int?
  colors String[]
  features String[]
  FAQs FAQ[]
  rating Rating[]
  numberOfRaters Int?
  image String?
  video String?
  isBestSeller Boolean @default(false)
  isNewArrival Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime?

  Cart Cart[]

  productCategoryIDs String[] @db.ObjectId
  productCategory ProductCategory[] @relation
}

model ProductCategory {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  productId String @db.ObjectId
  categoryId String @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime?

  productIDs String[] @db.ObjectId
  product Product @relation(fields: [productId], references: [id])

  CategoryIDs String[] @db.ObjectId
  Category Category @relation(fields: [categoryId], references: [id])
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  cart String
  totalCost Int
  discount Int?
  discountedAmount Int?
  tax Int?
  taxableAmount Int?
  amountToPay Int
  paymentStatus String?
  shippingStatus String?
  shipToAddress String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
}

model Invoice {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  orderId String
  systemRef String
  gatewayRef String
  amount Int
  currency String
  discountType String?
  discount Int?
  isDiscounted Boolean?
  status String
  gatewayTxnStatus String
  gatewayResponseCode String?
  createdAt DateTime @default(now())
  updatedAt DateTime?

  transaction Transaction[]
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model Transaction {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  invoice Invoice @relation(fields: [invoiceId], references: [id])
  invoiceId String @db.ObjectId
  userId String
  orderId String
  systemRef String
  gatewayRef String
  amount Int
  currency String
  discountType String?
  discount Int?
  isDiscounted Boolean?
  status String
  gatewayTxnStatus String
  gatewayResponseCode String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
}

model FAQ {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  question String
  answer String
  createdAt DateTime @default(now())
  updatedAt DateTime?

  product Product @relation(fields: [productId], references: [id])
  productId String @db.ObjectId
}

model Rating {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  rating Int
  createdAt DateTime @default(now())
  updatedAt DateTime?

  product Product @relation(fields: [productId], references: [id])
  productId String @db.ObjectId

  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

